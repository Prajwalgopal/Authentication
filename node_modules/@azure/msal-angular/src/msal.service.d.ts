import { UserAgentApplication, Configuration, AuthenticationParameters, AuthResponse, authResponseCallback, errorReceivedCallback, tokenReceivedCallback } from "msal";
import { Router } from "@angular/router";
import { BroadcastService } from "./broadcast.service";
import { MsalAngularConfiguration } from "./msal-angular.configuration";
export declare class MsalService extends UserAgentApplication {
    private msalConfig;
    private msalAngularConfig;
    private router;
    private broadcastService;
    constructor(msalConfig: Configuration, msalAngularConfig: MsalAngularConfiguration, router: Router, broadcastService: BroadcastService);
    private isUnprotectedResource;
    private isEmpty;
    loginPopup(request?: AuthenticationParameters): Promise<any>;
    ssoSilent(request: AuthenticationParameters): Promise<AuthResponse>;
    acquireTokenSilent(request: AuthenticationParameters): Promise<AuthResponse>;
    acquireTokenPopup(request: AuthenticationParameters): Promise<AuthResponse>;
    handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback): void;
    handleRedirectCallback(authCallback: authResponseCallback): void;
    clearCacheForScope(accessToken: string): void;
    getScopesForEndpoint(endpoint: string): Array<string>;
}
