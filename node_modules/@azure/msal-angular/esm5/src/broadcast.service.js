import { __decorate } from "tslib";
import { Injectable } from "@angular/core";
import { BehaviorSubject } from "rxjs";
import { filter, map } from "rxjs/operators";
var BroadcastService = /** @class */ (function () {
    function BroadcastService() {
        this._msalSubject = new BehaviorSubject(1);
        this.msalItem$ = this._msalSubject.asObservable();
    }
    BroadcastService.prototype.broadcast = function (type, payload) {
        this._msalSubject.next({ type: type, payload: payload });
    };
    BroadcastService.prototype.getMSALSubject = function () {
        return this._msalSubject;
    };
    BroadcastService.prototype.getMSALItem = function () {
        return this.msalItem$;
    };
    BroadcastService.prototype.subscribe = function (type, callback) {
        return this.msalItem$
            .pipe(filter(function (message) { return message.type === type; }), map(function (message) { return message.payload; }))
            .subscribe(callback);
    };
    BroadcastService = __decorate([
        Injectable()
    ], BroadcastService);
    return BroadcastService;
}());
export { BroadcastService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvYWRjYXN0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYXp1cmUvbXNhbC1hbmd1bGFyLyIsInNvdXJjZXMiOlsic3JjL2Jyb2FkY2FzdC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQTRCLE1BQU0sTUFBTSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFLN0M7SUFJSTtRQUNDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxlQUFlLENBQU0sQ0FBQyxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLFNBQVMsR0FBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3BELENBQUM7SUFFRCxvQ0FBUyxHQUFULFVBQVUsSUFBWSxFQUFFLE9BQVk7UUFDaEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLE1BQUEsRUFBRyxPQUFPLFNBQUEsRUFBQyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELHlDQUFjLEdBQWQ7UUFDSSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDN0IsQ0FBQztJQUVELHNDQUFXLEdBQVg7UUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDMUIsQ0FBQztJQUVELG9DQUFTLEdBQVQsVUFBVSxJQUFZLEVBQUUsUUFBeUI7UUFDN0MsT0FBTyxJQUFJLENBQUMsU0FBUzthQUNoQixJQUFJLENBQ0QsTUFBTSxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsT0FBTyxDQUFDLElBQUksS0FBSyxJQUFJLEVBQXJCLENBQXFCLENBQUMsRUFDeEMsR0FBRyxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsT0FBTyxDQUFDLE9BQU8sRUFBZixDQUFlLENBQUMsQ0FDbEM7YUFDQSxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQTVCUSxnQkFBZ0I7UUFENUIsVUFBVSxFQUFFO09BQ0EsZ0JBQWdCLENBOEI1QjtJQUFELHVCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0E5QlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSBcInJ4anNcIjtcclxuaW1wb3J0IHsgZmlsdGVyLCBtYXAgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcclxuXHJcbmV4cG9ydCB0eXBlIE1lc3NhZ2VDYWxsYmFjayA9IChwYXlsb2FkOiBhbnkpID0+IHZvaWQ7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBCcm9hZGNhc3RTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgX21zYWxTdWJqZWN0IDogQmVoYXZpb3JTdWJqZWN0PGFueT4gO1xyXG4gICAgcHJpdmF0ZSBtc2FsSXRlbSQ6ICBPYnNlcnZhYmxlPGFueT47XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgdGhpcy5fbXNhbFN1YmplY3QgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGFueT4oMSk7XHJcbiAgICAgdGhpcy5tc2FsSXRlbSQgID0gdGhpcy5fbXNhbFN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYnJvYWRjYXN0KHR5cGU6IHN0cmluZywgcGF5bG9hZDogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fbXNhbFN1YmplY3QubmV4dCh7dHlwZSAsIHBheWxvYWR9KTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRNU0FMU3ViamVjdCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbXNhbFN1YmplY3Q7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TVNBTEl0ZW0oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubXNhbEl0ZW0kO1xyXG4gICAgfVxyXG5cclxuICAgIHN1YnNjcmliZSh0eXBlOiBzdHJpbmcsIGNhbGxiYWNrOiBNZXNzYWdlQ2FsbGJhY2spOiBTdWJzY3JpcHRpb24ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1zYWxJdGVtJFxyXG4gICAgICAgICAgICAucGlwZShcclxuICAgICAgICAgICAgICAgIGZpbHRlcihtZXNzYWdlID0+IG1lc3NhZ2UudHlwZSA9PT0gdHlwZSksXHJcbiAgICAgICAgICAgICAgICBtYXAobWVzc2FnZSA9PiBtZXNzYWdlLnBheWxvYWQpXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgICAgLnN1YnNjcmliZShjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==